stages:
  - setup
  - build
  # - test
  - deploy

cache: &global_cache
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .npm/
    - node_modules/
  policy: pull

setup:
  image: node:15.14.0
  stage: setup
  cache:
    <<: *global_cache
    policy: pull-push
  script:
    - npm ci --cache .npm --prefer-offline --also=dev
  # only:
  #   changes:
  #     - package-lock.json

build:
  image: node:15.14.0
  stage: build
  cache: 
    <<: *global_cache
  script:
    - npm run build
  artifacts:
    expire_in: 1 week
    paths:
      - dist

# unit test:
#   image: node:15.14.0
#   stage: test
#   cache: 
#     <<: *global_cache
#   script:
#     - npm run test:unit

# e2e test:
#   image: cypress/browsers:node14.16.0-chrome90-ff88
#   stage: test
#   cache: 
#     <<: *global_cache
#   script:
#     - npm ci --cache .npm --prefer-offline --also=dev
#     - npm run test:e2e -- --headless
#   artifacts:
#     expire_in: 1 week
#     paths:
#       - tests/e2e/videos
#       - tests/e2e/screenshots

deploy:
  image: alpine
  stage: deploy
  only:
    - main
  script:
    - apk add --no-cache rsync openssh
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" >> ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - rsync -rav --stats --delete dist/ $PROD_USER@$PROD_IP:/srv/docker/nginx/html/recipes/